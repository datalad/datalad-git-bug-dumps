#!/usr/bin/env python3

import click
from collections import defaultdict
import json
#import fscacher
import tqdm


def get_human_id(rec):
    ret = rec['name']
    login = rec.get('login', '')
    if login:
        ret += f' ({login})'
    if not ret:
        raise ValueError(f"Empty human in {rec}")
    return ret


def create_human(rec):
    return dict(
                name=rec['name'],
                login=rec['login'],
                id=get_human_id(rec),
                opened=[],
                participated=[]
            )


@click.command()
def summary():
    with open("all-bugs.json") as f:
        bugs = json.load(f)
    print(f"Loaded {len(bugs)} bugs")
    humans = {}
    for bug in tqdm.tqdm(bugs, leave=False):
        author = bug['author']
        # our own id
        author_id = get_human_id(author)
        url = bug['metadata']['github-url']
        if author_id not in humans:
            humans[author_id] = create_human(author)
        humans[author_id]['opened'].append(url)

        for p in bug['participants']:
            p_id = get_human_id(p)
            if p['login'].lower() in ('yarikoptic-gitmate', 'yarikoptic-private'):
                continue
            if p_id != author_id:
                if p_id not in humans:
                    humans[p_id] = create_human(p)
                humans[p_id]["participated"].append(url)

    for rec in humans.values():
        rec['all'] = list(set(rec['opened'] + rec['participated']))

    # report in decreasing order
    with open("all-humans.txt", "w") as f:
        print('Format: # name (login): #bugs-opened #bugs-participated -> #bugs-opened+participated', file=f)
        for i, human in enumerate(sorted(humans.values(), key=lambda x: len(x['all']))[::-1], 1):
            print("{} {}: {} {} -> {} ".format(
                i, human['id'], len(human['opened']), len(human['participated']), len(human['all'])), file=f)


if __name__ == '__main__':
    summary()